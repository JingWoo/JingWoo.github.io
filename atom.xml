<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://jingwoo.github.io</id>
    <title>WuJing&apos;s Blog</title>
    <updated>2020-07-15T09:58:46.311Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://jingwoo.github.io"/>
    <link rel="self" href="https://jingwoo.github.io/atom.xml"/>
    <subtitle>ÊÄªÂú®Â§ïÈò≥ËêΩ‰∏ãÔºåÊ≤âÁú†‰πã‰∏≠ÔºåÂèà‰ºöËøéÊù•Âè¶‰∏ÄÁâáÊô®Èò≥.</subtitle>
    <logo>https://jingwoo.github.io/images/avatar.png</logo>
    <icon>https://jingwoo.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, WuJing&apos;s Blog</rights>
    <entry>
        <title type="html"><![CDATA[Windows Terminal Configuration]]></title>
        <id>https://jingwoo.github.io/post/windows-terminal-configuration/</id>
        <link href="https://jingwoo.github.io/post/windows-terminal-configuration/">
        </link>
        <updated>2020-07-15T09:52:28.000Z</updated>
        <content type="html"><![CDATA[<h2 id="useful-keyboard-shortcuts-in-windows-terminal">Useful Keyboard Shortcuts in windows terminal</h2>
<table>
<thead>
<tr>
<th style="text-align:left">Command</th>
<th>Shortcuts</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Open a new tab</td>
<td>ctrl+shift+t</td>
</tr>
<tr>
<td style="text-align:left">Open a new pane</td>
<td>alt+shift+d</td>
</tr>
<tr>
<td style="text-align:left">Duplicate tab</td>
<td>ctrl+shift+d</td>
</tr>
<tr>
<td style="text-align:left">Open default settings files</td>
<td>ctrl+alt+,</td>
</tr>
<tr>
<td style="text-align:left">Toggle full screen</td>
<td>f11</td>
</tr>
<tr>
<td style="text-align:left">Open next tab</td>
<td>ctrl+tab</td>
</tr>
<tr>
<td style="text-align:left">Open previous tab</td>
<td>ctrl+shift+tab</td>
</tr>
<tr>
<td style="text-align:left">Open a specific tab</td>
<td>ctrl+alt+1</td>
</tr>
<tr>
<td style="text-align:left">Close pane</td>
<td>ctrl+shift+w</td>
</tr>
<tr>
<td style="text-align:left">Move pane focus</td>
<td>alt+&quot;left&quot;<code>,</code>&quot;right&quot;<code>,</code>&quot;up&quot;<code>,</code>&quot;down&quot;</td>
</tr>
<tr>
<td style="text-align:left">Resize a pane</td>
<td>alt+shift+&quot;left&quot;<code>,</code>&quot;right&quot;<code>,</code>&quot;up&quot;<code>,</code>&quot;down&quot;</td>
</tr>
</tbody>
</table>
<h2 id="set-up-powerline-in-windows-terminal">Set up Powerline in Windows Terminal</h2>
<h3 id="set-up-powerline-in-powershell">Set up Powerline in PowerShell</h3>
<pre><code class="language-powershell"># Run PowerShell as administrator
Install-Module posh-git -Scope CurrentUser
Install-Module oh-my-posh -Scope CurrentUser
Install-Module -Name PSReadLine -Scope CurrentUser -Force -SkipPublisherCheck
</code></pre>
<h3 id="customize-your-powershell-prompt">Customize your PowerShell prompt</h3>
<pre><code class="language-po">$ notepad $PROFILE
	Import-Module posh-git
	Import-Module oh-my-posh
	Set-Theme Paradox
</code></pre>
<h2 id="customize-windows-terminal-profile-settings">Customize Windows Terminal Profile Settings</h2>
<pre><code class="language-json">// This file was initially generated by Windows Terminal 1.0.1401.0
// It should still be usable in newer versions, but newer versions might have additional
// settings, help text, or changes that you will not see unless you clear this file
// and let us generate a new one for you.

// To view the default settings, hold &quot;alt&quot; while clicking on the &quot;Settings&quot; button.
// For documentation on these settings, see: https://aka.ms/terminal-documentation
{
    &quot;$schema&quot;: &quot;https://aka.ms/terminal-profiles-schema&quot;,

    &quot;defaultProfile&quot;: &quot;{61c54bbd-c2c6-5271-96e7-009a87ff44bf}&quot;,

    // You can add more global application settings here.
    // To learn more about global settings, visit https://aka.ms/terminal-global-settings

    // If enabled, selections are automatically copied to your clipboard.
    &quot;copyOnSelect&quot;: true,

    // If enabled, formatted data is also copied to your clipboard
    &quot;copyFormatting&quot;: false,

    &quot;theme&quot;: &quot;dark&quot;,

    &quot;alwaysShowTabs&quot;: false,

    &quot;showTabsInTitlebar&quot;: true,

    &quot;confirmCloseAllTabs&quot;: true,

    &quot;wordDelimiters&quot;: &quot; ./\\()\&quot;'-:,.;&lt;&gt;~!@#$%^&amp;*|+=[]{}~?‚îÇ&quot;,

    &quot;snapToGridOnResize&quot;: true,

    // A profile specifies a command to execute paired with information about how it should look and feel.
    // Each one of them will appear in the 'New Tab' dropdown,
    //   and can be invoked from the commandline with `wt.exe -p xxx`
    // To learn more about profiles, visit https://aka.ms/terminal-profile-settings
    &quot;profiles&quot;:
    {
        &quot;defaults&quot;:
        {
            // Put settings here that you want to apply to all profiles.
            &quot;padding&quot;: &quot;0, 0, 0, 0&quot;
        },
        &quot;list&quot;:
        [
            {
                // Make changes here to the powershell.exe profile.
                &quot;guid&quot;: &quot;{61c54bbd-c2c6-5271-96e7-009a87ff44bf}&quot;,
                &quot;name&quot;: &quot;Windows PowerShell&quot;,
                &quot;commandline&quot;: &quot;powershell.exe&quot;,
                &quot;hidden&quot;: false,
                &quot;acrylicOpacity&quot;: 0.7,
                &quot;colorScheme&quot; : &quot;Frost&quot;,
                &quot;cursorColor&quot; : &quot;#000000&quot;,
                &quot;fontFace&quot;: &quot;Cascadia Code PL&quot;,
                &quot;useAcrylic&quot;: true
            },
            {
                &quot;name&quot;: &quot;Ubuntu-20.04&quot;,
                &quot;tabTitle&quot;: &quot;Ubuntu üíª&quot;,
                &quot;source&quot;: &quot;Windows.Terminal.Wsl&quot;,
                &quot;colorScheme&quot;: &quot;Solarized Dark&quot;,
                &quot;startingDirectory&quot;: &quot;//wsl$/Ubuntu-20.04/root&quot;,
                &quot;guid&quot;: &quot;{07b52e3e-de2c-5db4-bd2d-ba144ed6c273}&quot;,
                &quot;fontFace&quot;: &quot;Consolas&quot;,
                &quot;padding&quot;: &quot;0, 0, 0, 0&quot;,
                &quot;antialiasingMode&quot;: &quot;grayscale&quot;,
                &quot;cursorShape&quot;: &quot;bar&quot;,
                &quot;scrollbarState&quot;: &quot;hidden&quot;,
                &quot;historySize&quot;: 9001,
                &quot;closeOnExit&quot;: &quot;graceful&quot;,
                &quot;hidden&quot;: false,
                // &quot;experimental.retroTerminalEffect&quot;: true,
                &quot;acrylicOpacity&quot;: 0.8,
                &quot;useAcrylic&quot;: true
            },
            {
                &quot;acrylicOpacity&quot; : 0.5,
                &quot;closeOnExit&quot; : true,
                &quot;colorScheme&quot; : &quot;One Half Dark&quot;,
                &quot;commandline&quot; : &quot;ssh root@ip&quot;,
                &quot;cursorColor&quot; : &quot;#FFFFFF&quot;,
                &quot;cursorShape&quot; : &quot;bar&quot;,
                &quot;fontFace&quot; : &quot;Consolas&quot;,
                &quot;fontSize&quot; : 14,
                &quot;guid&quot; : &quot;{592D0432-1020-4DF6-83D4-928A7BE1D31A}&quot;,
                &quot;historySize&quot; : 9001,
                &quot;icon&quot; : &quot;ms-appx:///ProfileIcons/{9acb9455-ca41-5af7-950f-6bca1bc9722f}.png&quot;,
                &quot;name&quot; : &quot;xxxx&quot;,
                &quot;snapOnInput&quot; : true,
                &quot;startingDirectory&quot; : &quot;&quot;,
                &quot;useAcrylic&quot; : false
            }
        ]
    },

    // Add custom color schemes to this array.
    // To learn more about color schemes, visit https://aka.ms/terminal-color-schemes
    &quot;schemes&quot;: [
        {
            &quot;name&quot; : &quot;Frost&quot;,
            &quot;background&quot; : &quot;#FFFFFF&quot;,
            &quot;black&quot; : &quot;#3C5712&quot;,
            &quot;blue&quot; : &quot;#17b2ff&quot;,
            &quot;brightBlack&quot; : &quot;#749B36&quot;,
            &quot;brightBlue&quot; : &quot;#27B2F6&quot;,
            &quot;brightCyan&quot; : &quot;#13A8C0&quot;,
            &quot;brightGreen&quot; : &quot;#89AF50&quot;,
            &quot;brightPurple&quot; : &quot;#F2A20A&quot;,
            &quot;brightRed&quot; : &quot;#F49B36&quot;,
            &quot;brightWhite&quot; : &quot;#741274&quot;,
            &quot;brightYellow&quot; : &quot;#991070&quot;,
            &quot;cyan&quot; : &quot;#3C96A6&quot;,
            &quot;foreground&quot; : &quot;#000000&quot;,
            &quot;green&quot; : &quot;#6AAE08&quot;,
            &quot;purple&quot; : &quot;#991070&quot;,
            &quot;red&quot; : &quot;#8D0C0C&quot;,
            &quot;white&quot; : &quot;#6E386E&quot;,
            &quot;yellow&quot; : &quot;#991070&quot;
        }
    ],

    // Add custom keybindings to this array.
    // To unbind a key combination from your defaults.json, set the command to &quot;unbound&quot;.
    // To learn more about keybindings, visit https://aka.ms/terminal-keybindings
    &quot;keybindings&quot;:
    [
        // Copy and paste are bound to Ctrl+Shift+C and Ctrl+Shift+V in your defaults.json.
        // These two lines additionally bind them to Ctrl+C and Ctrl+V.
        // To learn more about selection, visit https://aka.ms/terminal-selection
        { &quot;command&quot;: {&quot;action&quot;: &quot;copy&quot;, &quot;singleLine&quot;: false }, &quot;keys&quot;: &quot;ctrl+c&quot; },
        { &quot;command&quot;: &quot;paste&quot;, &quot;keys&quot;: &quot;ctrl+v&quot; },

        // Press Ctrl+Shift+F to open the search box
        { &quot;command&quot;: &quot;find&quot;, &quot;keys&quot;: &quot;ctrl+shift+f&quot; },

        // Press Alt+Shift+D to open a new pane.
        // - &quot;split&quot;: &quot;auto&quot; makes this pane open in the direction that provides the most surface area.
        // - &quot;splitMode&quot;: &quot;duplicate&quot; makes the new pane use the focused pane's profile.
        // To learn more about panes, visit https://aka.ms/terminal-panes
        { &quot;command&quot;: { &quot;action&quot;: &quot;splitPane&quot;, &quot;split&quot;: &quot;auto&quot;, &quot;splitMode&quot;: &quot;duplicate&quot; }, &quot;keys&quot;: &quot;alt+shift+d&quot; }
    ]
}

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux Development Environment Configuration for iSulad]]></title>
        <id>https://jingwoo.github.io/post/linux-development-environment-configuration-for-isulad/</id>
        <link href="https://jingwoo.github.io/post/linux-development-environment-configuration-for-isulad/">
        </link>
        <updated>2020-07-12T07:12:54.000Z</updated>
        <content type="html"><![CDATA[<h2 id="virtual-machine-installation">Virtual machine installation</h2>
<pre><code class="language-bash">qemu-img create -f raw -o size=120G Fedora_Server.img
virsh dumpxml {guest-id, guestname or uuid} &gt; Fedora_Server.xml
virsh define Fedora_Server.xml
virsh start Fedora_Server
virsh vncdisplay Fedora_Server
</code></pre>
<h2 id="network-configuration">Network Configuration</h2>
<pre><code class="language-bash">vim /etc/sysconfig/network-scripts/ifcfg-ens3
systemctl enable NetworkManager
systemctl start NetworkManager
proxy
</code></pre>
<h2 id="awesome-tools-installation">Awesome Tools Installation</h2>
<pre><code class="language-bash">dnf upgrade -y 
dnf autoremove -y
dnf install -y vim htop the_silver_searcher fd-find bat exa ccze git tig 
dnf install -y fzf glances tmux ShellCheck ranger aria2 axel cloc task jq zsh npm
dnf install -y cmatrix screenfetch mariadb-server mariadb mycli
</code></pre>
<pre><code class="language-bash">git config --global user.name username
git config --global user.email email@xxx.com
git config --global http.sslVerify false

dnf install npm
npm install -g diff-so-fancy
git config --global core.pager &quot;diff-so-fancy | less --tabs=4 -RFX&quot;
git config --global color.ui true
git config --global color.diff-highlight.oldNormal    &quot;red bold&quot;
git config --global color.diff-highlight.oldHighlight &quot;red bold 52&quot;
git config --global color.diff-highlight.newNormal    &quot;green bold&quot;
git config --global color.diff-highlight.newHighlight &quot;green bold 22&quot;

git config --global color.diff.meta       &quot;11&quot;
git config --global color.diff.frag       &quot;magenta bold&quot;
git config --global color.diff.commit     &quot;yellow bold&quot;
git config --global color.diff.old        &quot;red bold&quot;
git config --global color.diff.new        &quot;green bold&quot;
git config --global color.diff.whitespace &quot;red reverse&quot;
git config --bool --global diff-so-fancy.markEmptyLines false
git config --bool --global diff-so-fancy.changeHunkIndicators false
git config --bool --global diff-so-fancy.stripLeadingSymbols false
git config --bool --global diff-so-fancy.useUnicodeRuler false
git config --global diff-so-fancy.rulerWidth 47    # git log's commit header width
</code></pre>
<pre><code class="language-bash">sh -c &quot;$(curl -kfsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;
cat ~/.zshrc
plugins=(git zsh-autosuggestions extract zsh-syntax-highlighting history-substring-search history zsh-256color vi-mode z wd taskwarrior)
# git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
# git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
# git clone https://github.com/zsh-users/zsh-history-substring-search ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-history-substring-search
# cd $ZSH_CUSTOM/plugins &amp;&amp; git clone https://github.com/chrissicool/zsh-256color

vim plugins/history-substring-search/history-substring-search.plugin.zsh
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

vim plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
typeset -g ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=3'

git clone https://github.com/junegunn/fzf.git
./install
vim ~/.zshrc
[ -f ~/.fzf.zsh ] &amp;&amp; source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='fd --hidden --follow -E &quot;.git&quot; -E &quot;node_modules&quot; . /etc /home'
export FZF_DEFAULT_OPTS='--height 90% --layout=reverse --bind=alt-j:down,alt-k:up,alt-i:toggle+down --border --preview &quot;(bat --style=numbers --color=always {}) 2&gt; /dev/null | head -500&quot; --preview-window=down'

# use fzf in bash and zsh
# Use ~~ as the trigger sequence instead of the default **
# export FZF_COMPLETION_TRIGGER=' f'
#

# Options to fzf command
#export FZF_COMPLETION_OPTS=''
#

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
#
_fzf_compgen_path() {
  fd --hidden --follow -E &quot;.git&quot; -E &quot;node_modules&quot; . /etc /home
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow -E &quot;.git&quot; -E &quot;node_modules&quot; . /etc /home
}

</code></pre>
<pre><code class="language-bash">dnf install -y ctags cscope global
dnf install -y neovim
pip2 install --no-cache-dir --upgrade --force-reinstall neovim
pip3 install --no-cache-dir --upgrade --force-reinstall neovim


vim ~/.zshrc
alias vi='nvim'
alias vim='nvim'

curl -ksLf https://spacevim.org/install.sh | bash
cat ~/.SpaceVim.d/init.toml
[options]
    # set spacevim theme. by default colorscheme layer is not loaded,
    # if you want to use more colorscheme, please load the colorscheme
    # layer
    # colorscheme = &quot;gruvbox&quot;
    colorscheme = &quot;NeoSolarized&quot;
    colorscheme_bg = &quot;dark&quot;
    # Disable guicolors in basic mode, many terminal do not support 24bit
    # true colors
    enable_guicolors = true
    # Disable statusline separator, if you want to use other value, please
    # install nerd fonts
    statusline_separator = &quot;arrow&quot;
    statusline_inactive_separator = &quot;bar&quot;
    buffer_index_type = 4
    windows_index_type = 3
    enable_statusline_mode = true
     # left sections of statusline
    statusline_left_sections = [
       'winnr',
       'major mode',
       'filename',
       'fileformat',
       'minor mode lighters',
       'version control info',
       'search status'
    ]
    # right sections of statusline
    statusline_right_sections = [
       'cursorpos',
       'percentage',
       'input method',
       'date',
       'time'
    ]

    enable_tabline_filetype_icon = true
    enable_statusline_display_mode = true
    statusline_unicode_symbols = true
    realtime_leader_guide = 1
    enable_statusline_tag = true
    # Enable vim compatible mode, avoid changing origin vim key bindings
    vimcompatible = true
    automatic_update = true
    enable_neomake = false
    # enable_ale = true
    filemanager = &quot;defx&quot;
    # enable_ycm = 1
    # autocomplete_method = &quot;coc&quot;

# Enable autocomplete layer
# [[layers]]
# name = 'autocomplete'
# autocomplete_method = &quot;ycm&quot;
# auto-completion-return-key-behavior = &quot;complete&quot;
# auto-completion-tab-key-behavior = &quot;smart&quot;
# enable = false

[[custom_plugins]]
  name = 'neoclide/coc.nvim'
  merge = 0
  build =  'yarn install --frozen-lockfile'

# [[layers]]
  # name = 'lsp'
  # filetypes = [
    # 'c',
    # 'cpp'
  # ]

# [layers.override_cmd]
  # c = ['ccls', '--log-file=/tmp/ccls.log']
  # cpp = ['ccls', '--log-file=/tmp/ccls.log']

[[layers]]
name = 'shell'
default_position = 'right'

# [[layers]]
# name = &quot;cscope&quot;

[[layers]]
name = &quot;VersionControl&quot;
enable-gtm-status = true

[[layers]]
name = &quot;checkers&quot;
show_cursor_error = false

[[layers]]
 name = &quot;colorscheme&quot;

# [[layers]]
# name = &quot;debug&quot;

# [[layers]]
# name = &quot;floobits&quot;

# [[layers]]
# name = &quot;fzf&quot;

[[layers]]
name = &quot;git&quot;
git-plugin = &quot;fugitive&quot;

# [[layers]]
#   name = &quot;lang#c&quot;
#   clang_executable = &quot;/usr/bin/clang&quot;
#   [layer.clang_std]
#     c = &quot;c11&quot;
#     cpp = &quot;c++1z&quot;

# [[layers]]
# name = &quot;lang#go&quot;

[[layers]]
  name = &quot;tmux&quot;
  # tmux_navigator_modifier = &quot;alt&quot;

[[layers]]
  name = &quot;leaderf&quot;

[[layers]]
  name = &quot;sudo&quot;

[[layers]]
  name = &quot;tags&quot;

[[layers]]
 name = &quot;tools&quot;

[[layers]]
 name = 'core'
 # filetree_show_hidden = true

# [[layers]]
#  name = &quot;core#statusline&quot;
#  enable = false

[[layers]]
  name = &quot;ui&quot;
  enable_sidebar = true

# [[layers]]
# name = &quot;gtags&quot;
# gtagslabel = &quot;ctags&quot;

# [custom_plugins]]
# name = &quot;Shougo/dein.vim&quot;

# [[custom_plugins]]
  # name = 'liuchengxu/vista.vim'
</code></pre>
<pre><code class="language-bash">set tabstop=4
set expandtab
set shiftwidth=4
nnoremap &lt;F9&gt; :set invpaste paste?&lt;CR&gt;
set pastetoggle=&lt;F9&gt;
set showmode
set cmdheight=1

&quot; let g:EasyMotion_do_mapping = 1

&quot; filetype plugin indent on
&quot; syntax enable
&quot;
&quot; Default value is &quot;normal&quot;, Setting this option to &quot;high&quot; or &quot;low&quot; does use the
&quot; same Solarized palette but simply shifts some values up or down in order to
&quot; expand or compress the tonal range displayed.
let g:neosolarized_contrast = &quot;normal&quot;

&quot; Special characters such as trailing whitespace, tabs, newlines, when displayed
&quot; using &quot;:set list&quot; can be set to one of three levels depending on your needs.
&quot; Default value is &quot;normal&quot;. Provide &quot;high&quot; and &quot;low&quot; options.
let g:neosolarized_visibility = &quot;normal&quot;

&quot; I make vertSplitBar a transparent background color. If you like the origin
&quot; solarized vertSplitBar style more, set this value to 0.
let g:neosolarized_vertSplitBgTrans = 1

&quot; If you wish to enable/disable NeoSolarized from displaying bold, underlined
&quot; or italicized&quot; typefaces, simply assign 1 or 0 to the appropriate variable.
&quot; Default values:
let g:neosolarized_bold = 1
let g:neosolarized_underline = 1
let g:neosolarized_italic = 0

&quot; Used to enable/disable &quot;bold as bright&quot; in Neovim terminal. If colors of bold
&quot; text output by commands like `ls` aren't what you expect, you might want to
&quot; try disabling this option. Default value:
let g:neosolarized_termBoldAsBright = 1
</code></pre>
<pre><code class="language-bash"># coc.nvim config
reference: https://github.com/neoclide/coc.nvim
https://github.com/neoclide/coc.nvim/wiki
https://github.com/MaskRay/ccls/wiki
https://clangd.llvm.org/

# configurate for coc.nvim
Open config file with command :CocConfig
{
  &quot;languageserver&quot;: {
    &quot;ccls&quot;: {
      &quot;command&quot;: &quot;ccls&quot;,
      &quot;filetypes&quot;: [&quot;c&quot;, &quot;cpp&quot;, &quot;cuda&quot;, &quot;objc&quot;, &quot;objcpp&quot;],
      &quot;rootPatterns&quot;: [&quot;.ccls-root&quot;, &quot;compile_commands.json&quot;],
      &quot;initializationOptions&quot;: {
        &quot;cache&quot;: {
          &quot;directory&quot;: &quot;.ccls-cache&quot;
        },
        &quot;client&quot;: {
          &quot;snippetSupport&quot;: true
        }
      }
    }
  }
}

#Set project for coc.nvim(compile_commands.json and .ccls)
cmake -H. -BDebug -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=YES
ln -s Debug/compile_commands.json .

cat .ccls
%compile_commands.json
%c -std=c11
%cpp -std=c++14
%c %cpp -pthread
%h %hpp --include=Global.h
-Iinc
</code></pre>
<pre><code class="language-bash">cd ~/.cache/vimfiles/repos/github.com/Valloric/YouCompleteMe
git submodule update --init --recursive
dnf install -y cmake python3-devel gcc-c++ clang golang
python3 install.py --clang-completer

cd /root/.SpaceVim
-----------------------------------------------
modified: config/plugins_before/YouCompleteMe.vim
-----------------------------------------------
@@ -1,4 +1,4 @@
-&quot;let g:ycm_global_ycm_extra_conf = '~/.ycm_extra_conf.py'
+let g:ycm_global_ycm_extra_conf = '~/.cache/vimfiles/repos/github.com/Valloric/YouCompleteMe/third_party/ycmd/.ycm_extra_conf.py'
 &quot;let g:ycm_confirm_extra_conf = 0
 let g:ycm_collect_identifiers_from_tags_files =
       \ get(g:, 'ycm_collect_identifiers_from_tags_files', 1)
-----------------------------------------------
modified: vimrc
-----------------------------------------------
@@ -25,3 +25,9 @@ if 1
     execute 'source' fnamemodify(expand('&lt;sfile&gt;'), ':h').'/config/main.vim'
 endif

cat ~/.Spacevim/vimrc
 &quot; vim:set et sw=2
+set tabstop=4
+set expandtab
+set shiftwidth=4
+nnoremap &lt;F9&gt; :set invpaste paste?&lt;CR&gt;
+set pastetoggle=&lt;F9&gt;
+set showmode

vim ~/.cache/vimfiles/repos/github.com/Valloric/YouCompleteMe/third_party/ycmd/.ycm_extra_conf.py
-----------------------------------------------
modified: .ycm_extra_conf.py
-----------------------------------------------
@@ -85,6 +85,18 @@ get_python_inc(),
 'cpp/ycm/tests/gmock/include',
 '-isystem',
 'cpp/ycm/benchmarks/benchmark/include',
+'-I',
+'/usr/local/include',
+'-I',
+'/usr/include',
+'-isystem',
+'/usr/lib/gcc/x86_64-redhat-linux/9/include',
+'-isystem',
+'/usr/include/c++/9',
+'-isystem',
+'/usr/include/c++/9/bits',
+'-isystem',
+'/usr/include/linux',
 ]

# oh-my-tmux
$ cd
$ git clone https://github.com/gpakosz/.tmux.git
$ ln -s -f .tmux/.tmux.conf
$ cp .tmux/.tmux.conf.local .

dnf install -y tmuxinator
echo &quot;export EDITOR='vim'&quot; &gt;&gt; ~/.zshrc
echo &quot;source ~/.bin/.tmuxinator.zsh&quot; &gt;&gt; ~/.zshrc
cat ~/.bin/.tmuxinator.zsh
#compdef _tmuxinator tmuxinator

_tmuxinator() {
  local commands projects
  commands=(${(f)&quot;$(tmuxinator commands zsh)&quot;})
  projects=(${(f)&quot;$(tmuxinator completions start)&quot;})

  if (( CURRENT == 2 )); then
    _alternative \
      'commands:: _describe -t commands &quot;tmuxinator subcommands&quot; commands' \
      'projects:: _describe -t projects &quot;tmuxinator projects&quot; projects'
  elif (( CURRENT == 3)); then
    case $words[2] in
      copy|cp|c|debug|delete|rm|open|o|start|s|edit|e)
        _arguments '*:projects:($projects)'
      ;;
    esac
  fi

  return
}

complete -F _tmuxinator tmuxinator mux
alias mux=&quot;tmuxinator&quot;
# Local Variables:
# mode: Shell-Script
# sh-indentation: 2
# indent-tabs-mode: nil
# sh-basic-offset: 2
# End:
# vim: ft=zsh sw=2 ts=2 et

tmuxinator new YOUR_PROJECT
tmuxinator edit YOUR_PROJECT
tmuxinator start YOUR_PROJECT
tmuxinator stop YOUR_PROJECT

vim ~/.tmux.conf
...
# replace C-b by C-a instead of using both prefixes
set-option -g prefix2 `

unbind '&quot;'
bind - splitw -v
unbind %
bind | splitw -h
# move status line to top
set -g status-position bottom

cd ~/.tmux
mkdir plugins
git clone https://github.com/tmux-plugins/tmux-resurrect.git
cd ~/.tmux/plugins
git clone https://github.com/tmux-plugins/tmux-continuum.git

run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
run-shell ~/.tmux/plugins/tmux-continuum/continuum.tmux

vim  ~/.tmux.conf
...
# set -g @continuum-save-interval '1440'
set -g @continuum-save-interval '0'
set -g @continuum-restore 'on'
</code></pre>
<h2 id="terminal-true-color-support">terminal true-color support</h2>
<p>xshell tools - configuation - advance - select using true-color<br>
referenceÔºöhttps://github.com/icymind/NeoSolarized<br>
https://gist.github.com/XVilka/8346728</p>
<p>code font: JetBrains Mono/Cascadia Code/Consolas<br>
https://www.jetbrains.com/lp/mono/</p>
<p>dnf install -y ccls bear<br>
if failed to install coc.nvim, execute <code>yarn config set &quot;strict-ssl&quot; false -g</code></p>
<p>[coc.nvim] error: Some plugin change completeopt on insert mode<br>
rm -rf <code>find ~ -name 'deoplete*'</code></p>
<h2 id="start-isulad-on-high-fedora-version-eg31">start iSulad on high Fedora version (eg:31)</h2>
<pre><code class="language-bash"># sudo grubby --update-kernel=ALL --args=&quot;systemd.unified_cgroup_hierarchy=0&quot;    # use cgroup v1
# sudo grubby --update-kernel=ALL --args=&quot;systemd.unified_cgroup_hierarchy=1&quot;    # use cgroup v2

$ sudo dnf install -y grubby
$ sudo grubby --update-kernel=ALL --args=&quot;systemd.unified_cgroup_hierarchy=0&quot;
$ sudo reboot
</code></pre>
<h2 id="developingdebuging-isulad">Developing/Debuging iSulad</h2>
<pre><code class="language-bash">dnf install valgrind gdb gdb-gdbserver tcpdump ystemtap ltrace strace
dnf group install 'Development Tools' 
dnf install gcc rpm-build rpm-devel rpmlint make python bash coreutils diffutils patch rpmdevtools

ulimit -c unlimited
echo &quot;1&quot; &gt; /proc/sys/kernel/core_uses_pid
echo &quot;/corefile/core-%e-%p-%t&quot; &gt; /proc/sys/kernel/core_pattern

valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all --track-origins=yes --leak-resolution=high --show-reachable=yes --log-file=valgrind_memcheck.log -v isulad
</code></pre>
<h3 id="isulad-network-debug">iSulad Network Debug</h3>
<pre><code class="language-bash">openssl x509 -in cert.pem -noout -text
./testssl.sh IP:port
sslscan --tlsall IP:port
openssl s_client -connect IP:port
tcpdump port $port
tcpdump -i xxx port $port
tshark -i xxx
</code></pre>
<h2 id=""></h2>
]]></content>
    </entry>
</feed>